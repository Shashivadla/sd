{
  "service": {
    "service": "sales-depot-service-bizdev",
    "serviceObject": {
      "name": "sales-depot-service-bizdev"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs16.x",
      "endpointType": "regional",
      "region": "us-east-2",
      "stage": "dev",
      "layers": [
        {
          "Ref": "SalesDepotLayerLambdaLayer"
        }
      ],
      "environment": {
        "REGION": "us-east-2",
        "ENV": "dev"
      },
      "iam": {
        "role": {
          "name": "sales-depot-lambda-dev-bizdev-role",
          "statements": [
            {
              "Effect": "Allow",
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Resource": "*"
            },
            {
              "Effect": "Allow",
              "Action": [
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:DescribeStream",
                "dynamodb:ListStreams",
                "dynamodb:DescribeTable",
                "dynamodb:Query",
                "dynamodb:Scan",
                "dynamodb:GetItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:BatchGetItem"
              ],
              "Resource": [
                "arn:aws:dynamodb:us-east-2:083868342691:table/sales-depot-monthly-invoice-dev1",
                "arn:aws:dynamodb:us-east-2:083868342691:table/salesStagingTable",
                "arn:aws:dynamodb:us-east-2:083868342691:table/recon-new"
              ]
            },
            {
              "Effect": "Allow",
              "Action": [
                "s3:ListBucket",
                "s3:DeleteObject",
                "s3:GetObject",
                "s3:PutObject"
              ],
              "Resource": [
                "arn:aws:s3:::sales-depot-dev2",
                "arn:aws:s3:::sales-depot-dev2/*"
              ]
            },
            {
              "Effect": "Allow",
              "Action": [
                "lambda:InvokeFunction",
                "lambda:InvokeAsync"
              ],
              "Resource": "*"
            }
          ]
        }
      },
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "MonthyInvoiceUploadToDbLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/s3-rawdb-monthly-invoice-lambda-dev"
            }
          },
          "MonthlyInvoiceReconInsertLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/rawdb-db-recon-monthly-invoice-lambda-dev"
            }
          },
          "SalesUploadToDbLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/s3-rawdb-sales-upload-lambda"
            }
          },
          "ResaReconInsertLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/salesdb-recadb-streams-lambda"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "sales-depot-service-bizdev",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/s3-rawdb-monthly-invoice-lambda-dev:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/rawdb-db-recon-monthly-invoice-lambda-dev:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/s3-rawdb-sales-upload-lambda:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/salesdb-recadb-streams-lambda:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/s3-rawdb-monthly-invoice-lambda-dev:*:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/rawdb-db-recon-monthly-invoice-lambda-dev:*:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/s3-rawdb-sales-upload-lambda:*:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/salesdb-recadb-streams-lambda:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iam\"][\"role\"][\"statements\"][0]"
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iam\"][\"role\"][\"statements\"][1]"
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iam\"][\"role\"][\"statements\"][2]"
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iam\"][\"role\"][\"statements\"][3]"
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "dynamodb:GetRecords",
                          "dynamodb:GetShardIterator",
                          "dynamodb:DescribeStream",
                          "dynamodb:ListStreams"
                        ],
                        "Resource": [
                          "arn:aws:dynamodb:us-east-2:083868342691:table/sales-depot-monthly-invoice-dev1/stream/2023-04-27T12:28:59.059"
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "dynamodb:GetRecords",
                          "dynamodb:GetShardIterator",
                          "dynamodb:DescribeStream",
                          "dynamodb:ListStreams"
                        ],
                        "Resource": [
                          "arn:aws:dynamodb:us-east-2:083868342691:table/salesStagingTable/stream/2023-04-30T16:23:50.755"
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": "sales-depot-lambda-dev-bizdev-role"
            }
          },
          "SalesDepotLayerLambdaLayer": {
            "Type": "AWS::Lambda::LayerVersion",
            "Properties": {
              "Content": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/sales-depot-service-bizdev/dev/1682951710788-2023-05-01T14:35:10.788Z/SalesDepotLayer.zip"
              },
              "LayerName": "NM-Sales-Depot-lambda-layer-dev",
              "Description": "sales depot lambda layer for all node modules - dev",
              "CompatibleRuntimes": [
                "nodejs16.x"
              ]
            }
          },
          "MonthyInvoiceUploadToDbLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/sales-depot-service-bizdev/dev/1682954660041-2023-05-01T15:24:20.041Z/monthyInvoiceUploadToDb.zip"
              },
              "Handler": "src/monthyInvoiceUploadToDb/index.handler",
              "Runtime": "nodejs16.x",
              "FunctionName": "s3-rawdb-monthly-invoice-lambda-dev",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "REGION": "us-east-2",
                  "ENV": "dev"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                {
                  "Ref": "SalesDepotLayerLambdaLayer"
                }
              ]
            },
            "DependsOn": [
              "MonthyInvoiceUploadToDbLogGroup"
            ]
          },
          "MonthlyInvoiceReconInsertLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/sales-depot-service-bizdev/dev/1682954660041-2023-05-01T15:24:20.041Z/monthlyInvoiceReconInsert.zip"
              },
              "Handler": "src/monthlyInvoiceReconInsert/index.handler",
              "Runtime": "nodejs16.x",
              "FunctionName": "rawdb-db-recon-monthly-invoice-lambda-dev",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "REGION": "us-east-2",
                  "ENV": "dev"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                {
                  "Ref": "SalesDepotLayerLambdaLayer"
                }
              ]
            },
            "DependsOn": [
              "MonthlyInvoiceReconInsertLogGroup"
            ]
          },
          "SalesUploadToDbLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/sales-depot-service-bizdev/dev/1682954660041-2023-05-01T15:24:20.041Z/salesUploadToDb.zip"
              },
              "Handler": "src/salesUploadToDb/index.handler",
              "Runtime": "nodejs16.x",
              "FunctionName": "s3-rawdb-sales-upload-lambda",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "REGION": "us-east-2",
                  "ENV": "dev"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                {
                  "Ref": "SalesDepotLayerLambdaLayer"
                }
              ]
            },
            "DependsOn": [
              "SalesUploadToDbLogGroup"
            ]
          },
          "ResaReconInsertLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/sales-depot-service-bizdev/dev/1682954660041-2023-05-01T15:24:20.041Z/resaReconInsert.zip"
              },
              "Handler": "src/resaReconInsert/index.handler",
              "Runtime": "nodejs16.x",
              "FunctionName": "salesdb-recadb-streams-lambda",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "REGION": "us-east-2",
                  "ENV": "dev"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                {
                  "Ref": "SalesDepotLayerLambdaLayer"
                }
              ]
            },
            "DependsOn": [
              "ResaReconInsertLogGroup"
            ]
          },
          "MonthlyInvoiceReconInsertLambdaVersionf2zXfIKglny1iAyfl89eh6j3YIJFfVBmiMDU4tpGsIo": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "MonthlyInvoiceReconInsertLambdaFunction"
              },
              "CodeSha256": "KVOSEFVFrXA6iWcg+X2m+9gYxDPT72N0KFLXJNI6CoI="
            }
          },
          "ResaReconInsertLambdaVersiony7uu9svdpnc49Tit4Le89qJ3bQaCYNKlRrEp5E1sI": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ResaReconInsertLambdaFunction"
              },
              "CodeSha256": "3W8gKGFFlkSZShRVhQPpvWZLUYrXKawIWIfBuHFIugA="
            }
          },
          "SalesUploadToDbLambdaVersionKUve2WeWfR1qS9eaJqFMU7Lh8AcTLpuoHnvRGxCCc": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "SalesUploadToDbLambdaFunction"
              },
              "CodeSha256": "pe387tQjbMN0VbfhHpOa95C0kceR8QLHrhhzJjpZU/0="
            }
          },
          "MonthyInvoiceUploadToDbLambdaVersions3btNk7Ej0eNhyl54BBgSUvh2g2SNs9OnUHYXXXo3U": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "MonthyInvoiceUploadToDbLambdaFunction"
              },
              "CodeSha256": "j9qQOuaAKOFpSpJ27V3WQNma4nbtoajYNy6Tx+6Ywzc="
            }
          },
          "S3BucketSalesdepotdev2": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketName": "sales-depot-dev2",
              "NotificationConfiguration": {
                "LambdaConfigurations": [
                  {
                    "Event": "s3:ObjectCreated:*",
                    "Function": {
                      "Fn::GetAtt": [
                        "MonthyInvoiceUploadToDbLambdaFunction",
                        "Arn"
                      ]
                    },
                    "Filter": {
                      "S3Key": {
                        "Rules": [
                          {
                            "Name": "prefix",
                            "Value": "FFMonthlyInvoice/Incoming/"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "Event": "s3:ObjectCreated:*",
                    "Function": {
                      "Fn::GetAtt": [
                        "SalesUploadToDbLambdaFunction",
                        "Arn"
                      ]
                    },
                    "Filter": {
                      "S3Key": {
                        "Rules": [
                          {
                            "Name": "prefix",
                            "Value": "RESAEBO/Incoming"
                          },
                          {
                            "Name": "suffix",
                            "Value": ".gz"
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            },
            "DependsOn": [
              "MonthyInvoiceUploadToDbLambdaPermissionSalesdepotdev2S3",
              "SalesUploadToDbLambdaPermissionSalesdepotdev2S3"
            ]
          },
          "MonthyInvoiceUploadToDbLambdaPermissionSalesdepotdev2S3": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "MonthyInvoiceUploadToDbLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "s3.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":s3:::sales-depot-dev2"
                  ]
                ]
              },
              "SourceAccount": {
                "Ref": "AWS::AccountId"
              }
            }
          },
          "SalesUploadToDbLambdaPermissionSalesdepotdev2S3": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "SalesUploadToDbLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "s3.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":s3:::sales-depot-dev2"
                  ]
                ]
              },
              "SourceAccount": {
                "Ref": "AWS::AccountId"
              }
            }
          },
          "MonthlyInvoiceReconInsertEventSourceMappingDynamodbSalesdepotmonthlyinvoicedev1": {
            "Type": "AWS::Lambda::EventSourceMapping",
            "DependsOn": [
              "IamRoleLambdaExecution"
            ],
            "Properties": {
              "BatchSize": 10,
              "Enabled": true,
              "EventSourceArn": "arn:aws:dynamodb:us-east-2:083868342691:table/sales-depot-monthly-invoice-dev1/stream/2023-04-27T12:28:59.059",
              "FunctionName": {
                "Fn::GetAtt": [
                  "MonthlyInvoiceReconInsertLambdaFunction",
                  "Arn"
                ]
              },
              "StartingPosition": "TRIM_HORIZON",
              "MaximumBatchingWindowInSeconds": 10
            }
          },
          "ResaReconInsertEventSourceMappingDynamodbSalesStagingTable": {
            "Type": "AWS::Lambda::EventSourceMapping",
            "DependsOn": [
              "IamRoleLambdaExecution"
            ],
            "Properties": {
              "BatchSize": 10,
              "Enabled": true,
              "EventSourceArn": "arn:aws:dynamodb:us-east-2:083868342691:table/salesStagingTable/stream/2023-04-30T16:23:50.755",
              "FunctionName": {
                "Fn::GetAtt": [
                  "ResaReconInsertLambdaFunction",
                  "Arn"
                ]
              },
              "StartingPosition": "TRIM_HORIZON",
              "MaximumBatchingWindowInSeconds": 10
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-sales-depot-service-bizdev-dev-ServerlessDeploymentBucketName"
            }
          },
          "SalesDepotLayerLambdaLayerQualifiedArn": {
            "Description": "Current Lambda layer version",
            "Value": {
              "Ref": "SalesDepotLayerLambdaLayer"
            },
            "Export": {
              "Name": "sls-sales-depot-service-bizdev-dev-SalesDepotLayerLambdaLayerQualifiedArn"
            }
          },
          "SalesDepotLayerLambdaLayerHash": {
            "Description": "Current Lambda layer hash",
            "Value": "66b1b8deefa6b7adbc099f274dd0de0e82fa3bc6",
            "Export": {
              "Name": "sls-sales-depot-service-bizdev-dev-SalesDepotLayerLambdaLayerHash"
            }
          },
          "SalesDepotLayerLambdaLayerS3Key": {
            "Description": "Current Lambda layer S3Key",
            "Value": "serverless/sales-depot-service-bizdev/dev/1682951710788-2023-05-01T14:35:10.788Z/SalesDepotLayer.zip",
            "Export": {
              "Name": "sls-sales-depot-service-bizdev-dev-SalesDepotLayerLambdaLayerS3Key"
            }
          },
          "MonthlyInvoiceReconInsertLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "MonthlyInvoiceReconInsertLambdaVersionf2zXfIKglny1iAyfl89eh6j3YIJFfVBmiMDU4tpGsIo"
            },
            "Export": {
              "Name": "sls-sales-depot-service-bizdev-dev-MonthlyInvoiceReconInsertLambdaFunctionQualifiedArn"
            }
          },
          "ResaReconInsertLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ResaReconInsertLambdaVersiony7uu9svdpnc49Tit4Le89qJ3bQaCYNKlRrEp5E1sI"
            },
            "Export": {
              "Name": "sls-sales-depot-service-bizdev-dev-ResaReconInsertLambdaFunctionQualifiedArn"
            }
          },
          "SalesUploadToDbLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "SalesUploadToDbLambdaVersionKUve2WeWfR1qS9eaJqFMU7Lh8AcTLpuoHnvRGxCCc"
            },
            "Export": {
              "Name": "sls-sales-depot-service-bizdev-dev-SalesUploadToDbLambdaFunctionQualifiedArn"
            }
          },
          "MonthyInvoiceUploadToDbLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "MonthyInvoiceUploadToDbLambdaVersions3btNk7Ej0eNhyl54BBgSUvh2g2SNs9OnUHYXXXo3U"
            },
            "Export": {
              "Name": "sls-sales-depot-service-bizdev-dev-MonthyInvoiceUploadToDbLambdaFunctionQualifiedArn"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "account": "bizdev",
      "region": "us-west-2",
      "stage": "dev",
      "serverless-iam-roles-per-function": {
        "defaultInherit": true
      }
    },
    "pluginsData": {},
    "functions": {
      "monthyInvoiceUploadToDb": {
        "handler": "src/monthyInvoiceUploadToDb/index.handler",
        "name": "s3-rawdb-monthly-invoice-lambda-dev",
        "layers": {
          "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"MonthyInvoiceUploadToDbLambdaFunction\"][\"Properties\"][\"Layers\"]"
        },
        "events": [
          {
            "s3": {
              "bucket": "sales-depot-dev2",
              "event": "s3:ObjectCreated:*",
              "rules": [
                {
                  "prefix": "FFMonthlyInvoice/Incoming/"
                }
              ]
            }
          }
        ],
        "package": {
          "individually": true,
          "patterns": [
            "!**/*",
            "src/monthyInvoiceUploadToDb/*.js",
            "src/shared/**"
          ],
          "artifact": "C:\\Users\\shashidhar\\Documents\\GitHub\\sd\\.serverless\\monthyInvoiceUploadToDb.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs16.x",
        "vpc": {},
        "versionLogicalId": "MonthyInvoiceUploadToDbLambdaVersions3btNk7Ej0eNhyl54BBgSUvh2g2SNs9OnUHYXXXo3U"
      },
      "monthlyInvoiceReconInsert": {
        "handler": "src/monthlyInvoiceReconInsert/index.handler",
        "name": "rawdb-db-recon-monthly-invoice-lambda-dev",
        "events": [
          {
            "stream": {
              "type": "dynamodb",
              "arn": "arn:aws:dynamodb:us-east-2:083868342691:table/sales-depot-monthly-invoice-dev1/stream/2023-04-27T12:28:59.059",
              "batchWindow": 10
            }
          }
        ],
        "layers": {
          "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"MonthlyInvoiceReconInsertLambdaFunction\"][\"Properties\"][\"Layers\"]"
        },
        "package": {
          "individually": true,
          "patterns": [
            "!**/*",
            "src/monthlyInvoiceReconInsert/*.js",
            "src/shared/**"
          ],
          "artifact": "C:\\Users\\shashidhar\\Documents\\GitHub\\sd\\.serverless\\monthlyInvoiceReconInsert.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs16.x",
        "vpc": {},
        "versionLogicalId": "MonthlyInvoiceReconInsertLambdaVersionf2zXfIKglny1iAyfl89eh6j3YIJFfVBmiMDU4tpGsIo"
      },
      "salesUploadToDb": {
        "handler": "src/salesUploadToDb/index.handler",
        "name": "s3-rawdb-sales-upload-lambda",
        "layers": {
          "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"SalesUploadToDbLambdaFunction\"][\"Properties\"][\"Layers\"]"
        },
        "events": [
          {
            "s3": {
              "bucket": "sales-depot-dev2",
              "event": "s3:ObjectCreated:*",
              "rules": [
                {
                  "prefix": "RESAEBO/Incoming"
                },
                {
                  "suffix": ".gz"
                }
              ]
            }
          }
        ],
        "package": {
          "individually": true,
          "patterns": [
            "!**/*",
            "src/salesUploadToDb/*.js",
            "src/shared/**"
          ],
          "artifact": "C:\\Users\\shashidhar\\Documents\\GitHub\\sd\\.serverless\\salesUploadToDb.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs16.x",
        "vpc": {},
        "versionLogicalId": "SalesUploadToDbLambdaVersionKUve2WeWfR1qS9eaJqFMU7Lh8AcTLpuoHnvRGxCCc"
      },
      "resaReconInsert": {
        "handler": "src/resaReconInsert/index.handler",
        "name": "salesdb-recadb-streams-lambda",
        "events": [
          {
            "stream": {
              "type": "dynamodb",
              "arn": "arn:aws:dynamodb:us-east-2:083868342691:table/salesStagingTable/stream/2023-04-30T16:23:50.755",
              "batchWindow": 10
            }
          }
        ],
        "layers": {
          "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ResaReconInsertLambdaFunction\"][\"Properties\"][\"Layers\"]"
        },
        "package": {
          "individually": true,
          "patterns": [
            "!**/*",
            "src/resaReconInsert/*.js",
            "src/shared/**"
          ],
          "artifact": "C:\\Users\\shashidhar\\Documents\\GitHub\\sd\\.serverless\\resaReconInsert.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs16.x",
        "vpc": {},
        "versionLogicalId": "ResaReconInsertLambdaVersiony7uu9svdpnc49Tit4Le89qJ3bQaCYNKlRrEp5E1sI"
      }
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": "sales-depot-service-bizdev",
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      },
      "package": {
        "individually": true,
        "artifactsS3KeyDirname": "serverless/sales-depot-service-bizdev/dev/code-artifacts",
        "artifactDirectoryName": "serverless/sales-depot-service-bizdev/dev/1682954660041-2023-05-01T15:24:20.041Z"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "layers": {
        "SalesDepotLayer": {
          "path": "lambdaLayer/lib",
          "name": "NM-Sales-Depot-lambda-layer-dev",
          "description": "sales depot lambda layer for all node modules - dev",
          "compatibleRuntimes": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"SalesDepotLayerLambdaLayer\"][\"Properties\"][\"CompatibleRuntimes\"]"
          },
          "retain": false,
          "package": {
            "artifact": "C:\\Users\\shashidhar\\Documents\\GitHub\\sd\\.serverless\\SalesDepotLayer.zip"
          },
          "artifactAlreadyUploaded": true
        }
      }
    },
    "layers": {
      "$ref": "$[\"service\"][\"initialServerlessConfig\"][\"layers\"]"
    },
    "isDashboardMonitoringPreconfigured": false
  },
  "package": {
    "individually": true,
    "artifactDirectoryName": "serverless/sales-depot-service-bizdev/dev/1682954660041-2023-05-01T15:24:20.041Z",
    "artifact": ""
  }
}